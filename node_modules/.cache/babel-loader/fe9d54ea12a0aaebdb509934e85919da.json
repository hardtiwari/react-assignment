{"ast":null,"code":"import { Dimensions } from 'react-native';\nconst {\n  width,\n  height\n} = Dimensions.get('window');\nconst [shortDimension, longDimension] = width < height ? [width, height] : [height, width]; //Default guideline sizes are based on standard ~5\" screen mobile device\n\nconst guidelineBaseWidth = 350;\nconst guidelineBaseHeight = 680;\nexport const scale = size => shortDimension / guidelineBaseWidth * size;\nexport const verticalScale = size => longDimension / guidelineBaseHeight * size;\nexport const moderateScale = function (size) {\n  let factor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.5;\n  return size + (scale(size) - size) * factor;\n};\nexport const moderateVerticalScale = function (size) {\n  let factor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.5;\n  return size + (verticalScale(size) - size) * factor;\n};\nexport const s = scale;\nexport const vs = verticalScale;\nexport const ms = moderateScale;\nexport const mvs = moderateVerticalScale;","map":{"version":3,"names":["Dimensions","width","height","get","shortDimension","longDimension","guidelineBaseWidth","guidelineBaseHeight","scale","size","verticalScale","moderateScale","factor","moderateVerticalScale","s","vs","ms","mvs"],"sources":["/Users/hardtiwari/react/cardekho/node_modules/react-native-size-matters/lib/scaling-utils.js"],"sourcesContent":["import { Dimensions } from 'react-native';\n\nconst { width, height } = Dimensions.get('window');\nconst [shortDimension, longDimension] = width < height ? [width, height] : [height, width];\n\n//Default guideline sizes are based on standard ~5\" screen mobile device\nconst guidelineBaseWidth = 350;\nconst guidelineBaseHeight = 680;\n\nexport const scale = size => shortDimension / guidelineBaseWidth * size;\nexport const verticalScale = size => longDimension / guidelineBaseHeight * size;\nexport const moderateScale = (size, factor = 0.5) => size + (scale(size) - size) * factor;\nexport const moderateVerticalScale = (size, factor = 0.5) => size + (verticalScale(size) - size) * factor;\n\nexport const s = scale;\nexport const vs = verticalScale;\nexport const ms = moderateScale;\nexport const mvs = moderateVerticalScale;"],"mappings":"AAAA,SAASA,UAAT,QAA2B,cAA3B;AAEA,MAAM;EAAEC,KAAF;EAASC;AAAT,IAAoBF,UAAU,CAACG,GAAX,CAAe,QAAf,CAA1B;AACA,MAAM,CAACC,cAAD,EAAiBC,aAAjB,IAAkCJ,KAAK,GAAGC,MAAR,GAAiB,CAACD,KAAD,EAAQC,MAAR,CAAjB,GAAmC,CAACA,MAAD,EAASD,KAAT,CAA3E,C,CAEA;;AACA,MAAMK,kBAAkB,GAAG,GAA3B;AACA,MAAMC,mBAAmB,GAAG,GAA5B;AAEA,OAAO,MAAMC,KAAK,GAAGC,IAAI,IAAIL,cAAc,GAAGE,kBAAjB,GAAsCG,IAA5D;AACP,OAAO,MAAMC,aAAa,GAAGD,IAAI,IAAIJ,aAAa,GAAGE,mBAAhB,GAAsCE,IAApE;AACP,OAAO,MAAME,aAAa,GAAG,UAACF,IAAD;EAAA,IAAOG,MAAP,uEAAgB,GAAhB;EAAA,OAAwBH,IAAI,GAAG,CAACD,KAAK,CAACC,IAAD,CAAL,GAAcA,IAAf,IAAuBG,MAAtD;AAAA,CAAtB;AACP,OAAO,MAAMC,qBAAqB,GAAG,UAACJ,IAAD;EAAA,IAAOG,MAAP,uEAAgB,GAAhB;EAAA,OAAwBH,IAAI,GAAG,CAACC,aAAa,CAACD,IAAD,CAAb,GAAsBA,IAAvB,IAA+BG,MAA9D;AAAA,CAA9B;AAEP,OAAO,MAAME,CAAC,GAAGN,KAAV;AACP,OAAO,MAAMO,EAAE,GAAGL,aAAX;AACP,OAAO,MAAMM,EAAE,GAAGL,aAAX;AACP,OAAO,MAAMM,GAAG,GAAGJ,qBAAZ"},"metadata":{},"sourceType":"module"}