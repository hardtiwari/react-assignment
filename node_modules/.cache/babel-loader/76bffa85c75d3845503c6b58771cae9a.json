{"ast":null,"code":"import { StyleSheet } from 'react-native';\nimport deepMap from './deep-map'; // Groups                     Size                   Func Factor\n//                             1                      2    3\n\nconst validScaleSheetRegex = /^(\\-?\\d+(?:\\.\\d{1,3})?)@(mv?s(\\d+(?:\\.\\d{1,2})?)?|s|vs)r?$/;\n\nconst scaleByAnnotation = (scale, verticalScale, moderateScale, moderateVerticalScale) => value => {\n  if (!validScaleSheetRegex.test(value)) {\n    return value;\n  }\n\n  const regexExecResult = validScaleSheetRegex.exec(value);\n  const size = parseFloat(regexExecResult[1]);\n  let scaleFunc = regexExecResult[2];\n  const scaleFactor = regexExecResult[3]; // string or undefined\n\n  if (scaleFactor) scaleFunc = scaleFunc.slice(0, -scaleFactor.length); // Remove the factor from it\n\n  const shouldRound = value.endsWith('r');\n  let result;\n\n  switch (scaleFunc) {\n    case 's':\n      result = scale(size);\n      break;\n\n    case 'vs':\n      result = verticalScale(size);\n      break;\n\n    case 'ms':\n      result = moderateScale(size, scaleFactor);\n      break;\n\n    case 'mvs':\n      result = moderateVerticalScale(size, scaleFactor);\n      break;\n  }\n\n  return shouldRound ? Math.round(result) : result;\n};\n\nconst scaledSheetCreator = (scale, verticalScale, moderateScale, moderateVerticalScale) => {\n  const scaleFunc = scaleByAnnotation(scale, verticalScale, moderateScale, moderateVerticalScale);\n  return {\n    create: styleSheet => StyleSheet.create(deepMap(styleSheet, scaleFunc))\n  };\n};\n\nexport default scaledSheetCreator;","map":{"version":3,"names":["StyleSheet","deepMap","validScaleSheetRegex","scaleByAnnotation","scale","verticalScale","moderateScale","moderateVerticalScale","value","test","regexExecResult","exec","size","parseFloat","scaleFunc","scaleFactor","slice","length","shouldRound","endsWith","result","Math","round","scaledSheetCreator","create","styleSheet"],"sources":["/Users/hardtiwari/react/cardekho/node_modules/react-native-size-matters/lib/ScaledSheet.js"],"sourcesContent":["import { StyleSheet } from 'react-native';\nimport deepMap from './deep-map';\n\n// Groups                     Size                   Func Factor\n//                             1                      2    3\nconst validScaleSheetRegex = /^(\\-?\\d+(?:\\.\\d{1,3})?)@(mv?s(\\d+(?:\\.\\d{1,2})?)?|s|vs)r?$/;\n\nconst scaleByAnnotation = (scale, verticalScale, moderateScale, moderateVerticalScale) => (value) => {\n    if (!validScaleSheetRegex.test(value)) {\n        return value;\n    }\n\n    const regexExecResult = validScaleSheetRegex.exec(value);\n\n    const size = parseFloat(regexExecResult[1]);\n    let scaleFunc = regexExecResult[2];\n    const scaleFactor = regexExecResult[3]; // string or undefined\n\n    if (scaleFactor)\n        scaleFunc = scaleFunc.slice(0, - scaleFactor.length); // Remove the factor from it\n\n    const shouldRound = value.endsWith('r');\n\n    let result;\n\n    switch (scaleFunc) {\n        case 's':\n            result = scale(size);\n            break;\n        case 'vs':\n            result = verticalScale(size);\n            break;\n        case 'ms':\n            result = moderateScale(size, scaleFactor);\n            break;\n        case 'mvs':\n            result = moderateVerticalScale(size, scaleFactor);\n            break;\n    }\n\n    return shouldRound ? Math.round(result) : result;\n};\n\nconst scaledSheetCreator = (scale, verticalScale, moderateScale, moderateVerticalScale) => {\n    const scaleFunc = scaleByAnnotation(scale, verticalScale, moderateScale, moderateVerticalScale);\n    return {\n        create: styleSheet => StyleSheet.create(deepMap(styleSheet, scaleFunc))\n    };\n};\n\nexport default scaledSheetCreator;"],"mappings":"AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,OAAOC,OAAP,MAAoB,YAApB,C,CAEA;AACA;;AACA,MAAMC,oBAAoB,GAAG,4DAA7B;;AAEA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,aAAR,EAAuBC,aAAvB,EAAsCC,qBAAtC,KAAiEC,KAAD,IAAW;EACjG,IAAI,CAACN,oBAAoB,CAACO,IAArB,CAA0BD,KAA1B,CAAL,EAAuC;IACnC,OAAOA,KAAP;EACH;;EAED,MAAME,eAAe,GAAGR,oBAAoB,CAACS,IAArB,CAA0BH,KAA1B,CAAxB;EAEA,MAAMI,IAAI,GAAGC,UAAU,CAACH,eAAe,CAAC,CAAD,CAAhB,CAAvB;EACA,IAAII,SAAS,GAAGJ,eAAe,CAAC,CAAD,CAA/B;EACA,MAAMK,WAAW,GAAGL,eAAe,CAAC,CAAD,CAAnC,CATiG,CASzD;;EAExC,IAAIK,WAAJ,EACID,SAAS,GAAGA,SAAS,CAACE,KAAV,CAAgB,CAAhB,EAAmB,CAAED,WAAW,CAACE,MAAjC,CAAZ,CAZ6F,CAYvC;;EAE1D,MAAMC,WAAW,GAAGV,KAAK,CAACW,QAAN,CAAe,GAAf,CAApB;EAEA,IAAIC,MAAJ;;EAEA,QAAQN,SAAR;IACI,KAAK,GAAL;MACIM,MAAM,GAAGhB,KAAK,CAACQ,IAAD,CAAd;MACA;;IACJ,KAAK,IAAL;MACIQ,MAAM,GAAGf,aAAa,CAACO,IAAD,CAAtB;MACA;;IACJ,KAAK,IAAL;MACIQ,MAAM,GAAGd,aAAa,CAACM,IAAD,EAAOG,WAAP,CAAtB;MACA;;IACJ,KAAK,KAAL;MACIK,MAAM,GAAGb,qBAAqB,CAACK,IAAD,EAAOG,WAAP,CAA9B;MACA;EAZR;;EAeA,OAAOG,WAAW,GAAGG,IAAI,CAACC,KAAL,CAAWF,MAAX,CAAH,GAAwBA,MAA1C;AACH,CAlCD;;AAoCA,MAAMG,kBAAkB,GAAG,CAACnB,KAAD,EAAQC,aAAR,EAAuBC,aAAvB,EAAsCC,qBAAtC,KAAgE;EACvF,MAAMO,SAAS,GAAGX,iBAAiB,CAACC,KAAD,EAAQC,aAAR,EAAuBC,aAAvB,EAAsCC,qBAAtC,CAAnC;EACA,OAAO;IACHiB,MAAM,EAAEC,UAAU,IAAIzB,UAAU,CAACwB,MAAX,CAAkBvB,OAAO,CAACwB,UAAD,EAAaX,SAAb,CAAzB;EADnB,CAAP;AAGH,CALD;;AAOA,eAAeS,kBAAf"},"metadata":{},"sourceType":"module"}